convert.rMR('SMR_21_LF_10.25.2021_raw.txt',
'Converted SMR 21 10.25.2021.txt',
n.chamber=8,
logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
convert.rMR('SMR_23_LF_10.27.2021_raw.txt',
'Converted SMR 23 10.05.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
convert.rMR('SMR_25_LF_10.29.2021_raw.txt',
'Converted SMR 25 10.29.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
#Import Raw SMR Data
LF.SMR.21.raw<-import.meas('Converted SMR 21 10.25.2021.txt',
info.data=info_21.25,
logger="AutoResp",
n.chamber=8,
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
LF.SMR.23.raw<-import.meas('Converted SMR 23 10.27.2021.txt',
info.data=info_23.27,
n.chamber=8,
logger="AutoResp",
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
LF.SMR.25.raw<-import.meas('Converted SMR 25 10.29.2021.txt',
info.data=info_25.29,
logger="AutoResp",
n.chamber=8,
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
#Clean Raw SMR data with background respiration measurments
LF.SMR.21.clean<-correct.meas(info.data=info_21.25,
pre.data=LF21.pre,
post.data=LF21.post,
meas.data=LF.SMR.21.raw,
method="exponential")
LF.SMR.23.clean<-correct.meas(info.data=info_23.27,
pre.data=LF23.pre,
post.data=LF23.post,
meas.data=LF.SMR.23.raw,
method="exponential")
LF.SMR.25.clean<-correct.meas(info.data=info_25.29,
pre.data=LF25.pre,
post.data=LF25.post,
meas.data=LF.SMR.25.raw,
method="exponential")
#Extract slopes for Standard Metabolic Rate
LF.SMR.21.slopes<-extract.slope(LF.SMR.21.clean,
method="calcSMR.quant",
r2=0.9,
p=0.2)
convert.rMR('SMR_23_LF_10.27.2021_raw.txt',
'Converted SMR 23 10.27.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
LF.SMR.23.raw<-import.meas('Converted SMR 23 10.27.2021.txt',
info.data=info_23.27,
n.chamber=8,
logger="AutoResp",
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
LF.SMR.25.raw<-import.meas('Converted SMR 25 10.29.2021.txt',
info.data=info_25.29,
logger="AutoResp",
n.chamber=8,
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
#Clean Raw SMR data with background respiration measurments
LF.SMR.21.clean<-correct.meas(info.data=info_21.25,
pre.data=LF21.pre,
post.data=LF21.post,
meas.data=LF.SMR.21.raw,
method="exponential")
LF.SMR.23.clean<-correct.meas(info.data=info_23.27,
pre.data=LF23.pre,
post.data=LF23.post,
meas.data=LF.SMR.23.raw,
method="exponential")
LF.SMR.25.clean<-correct.meas(info.data=info_25.29,
pre.data=LF25.pre,
post.data=LF25.post,
meas.data=LF.SMR.25.raw,
method="exponential")
#Extract slopes for Standard Metabolic Rate
LF.SMR.21.slopes<-extract.slope(LF.SMR.21.clean,
method="calcSMR.quant",
r2=0.9,
p=0.2)
LF.SMR.23.slopes<-extract.slope(LF.SMR.23.clean,
method="calcSMR.quant",
r2=c(0.9),
p=0.2)
LF.SMR.25.slopes<-extract.slope(LF.SMR.25.clean,
method="calcSMR.quant",
r2=c(0.9),
p=0.2)
##Extract slopes for Maximum Metabolic Rate during SMR Measurements
LF.SMR.MMR.21.slopes<-extract.slope(LF.SMR.21.clean,
method="max",
n.slope=1)
LF.SMR.MMR.23.slopes<-extract.slope(LF.SMR.23.clean,
method="max",
n.slope=1)
LF.SMR.MMR.25.slopes<-extract.slope(LF.SMR.25.clean,
method="max",
n.slope=1)
##Calculate Standard Metabolic Rates
LF.SMR.21<-calculate.MR(LF.SMR.21.slopes,density=1000)
LF.SMR.23<-calculate.MR(LF.SMR.23.slopes,density=1000)
LF.SMR.25<-calculate.MR(LF.SMR.25.slopes,density=1000)
##Combine Data into one Dataframe
LF.SMR.Acclimated<-rbind.data.frame(LF.SMR.21,LF.SMR.23,LF.SMR.25)
LF.SMR.MMR.Acclimated<-rbind.data.frame(LF.SMR.MMR.21,LF.SMR.MMR.23,LF.SMR.MMR.25)
##Calculate Maximum Metabolic Rates
LF.SMR.MMR.21<-calculate.MR(LF.SMR.MMR.21.slopes,density=1000)
LF.SMR.MMR.23<-calculate.MR(LF.SMR.MMR.23.slopes,density=1000)
LF.SMR.MMR.25<-calculate.MR(LF.SMR.MMR.25.slopes,density=1000)
##Combine Data into one Dataframe
LF.SMR.Acclimated<-rbind.data.frame(LF.SMR.21,LF.SMR.23,LF.SMR.25)
LF.SMR.MMR.Acclimated<-rbind.data.frame(LF.SMR.MMR.21,LF.SMR.MMR.23,LF.SMR.MMR.25)
##Add additional Columns
Temperature<-c(21,21,21,21,21,21,21,21,23,23,23,23,23,23,23,23,25,25,25,25,25,25,25,25)
Trial<-c("SMR","SMR","SMR","SMR",
"SMR","SMR","SMR","SMR",
"SMR","SMR","SMR","SMR",
"SMR","SMR","SMR","SMR",
"SMR","SMR","SMR","SMR",
"SMR","SMR","SMR","SMR")
Event<-c(1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3)
LF.SMR.Acclimated<-cbind(LF.SMR.Acclimated,Trial,Temperature,Event)
LF.SMR.MMR.Acclimated<-cbind(LF.SMR.MMR.Acclimated,Trial,Temperature,Event)
write.csv(LF.SMR.Acclimated,"LF Acclimated SMR EXP 2.csv")
write.csv(LF.SMR.MMR.Acclimated,"LF Acclimated SMR-MMR EXP 2.csv")
#Convert %Air Saturation to mg/L for MMR measurements and Empty chamber runs
#First Run of Acute MMR Upper Pennisula
convert.rMR('MMR_21_LF_10.26.2021_raw.txt',
'Converted MMR 21 10.26.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
convert.rMR('MMR_23_LF_10.28.2021_raw.txt',
'Converted MMR 23 10.28.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
convert.rMR('MMR_25_LF_10.30.2021_raw.txt',
'Converted MMR 25 10.30.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
#Import Raw MMR Data
LF.MMR.21.raw<-import.meas('Converted MMR 21 10.26.2021.txt',
info.data=info_21.26,
logger="AutoResp",
n.chamber=8,
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
#Convert %Air Saturation to mg/L for MMR measurements and Empty chamber runs
#First Run of Acute MMR Upper Pennisula
convert.rMR('MMR_21_LF_10.26.2021_raw.txt',
'Converted MMR 21 10.26.2021.txt',
n.chamber=8,logger="AutoResp",
DO.units.in = "pct",
DO.units.out = "mg/L",
salinity=0,
bar.press=101.3,
bar.units.in="kpa")
#Import Raw MMR Data
LF.MMR.21.raw<-import.meas('Converted MMR 21 10.26.2021.txt',
info.data=info_21.26,
logger="AutoResp",
n.chamber=8,
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
LF.MMR.23.raw<-import.meas('Converted MMR 23 10.28.2021.txt',
info.data=info_23.28,
n.chamber=8,
logger="AutoResp",
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
LF.MMR.25.raw<-import.meas('Converted MMR 25 10.30.2021.txt',
info.data=info_25.30,
logger="AutoResp",
n.chamber=8,
date.format="MDY",
plot.temperature = F,
plot.oxygen = F)
#Clean Raw MMR data with background respiration measurments
LF.MMR.21.clean<-correct.meas(info.data=info_21.26,
pre.data=LF21.pre,
post.data=LF21.post,
meas.data=LF.MMR.21.raw,
method="exponential")
LF.MMR.23.clean<-correct.meas(info.data=info_23.28,
pre.data=LF23.pre,
post.data=LF23.post,
meas.data=LF.MMR.23.raw,
method="exponential")
LF.MMR.25.clean<-correct.meas(info.data=info_25.30,
pre.data=LF25.pre,
post.data=LF25.post,
meas.data=LF.MMR.25.raw,
method="exponential")
#Extract slopes
LF.MMR.21.slopes<-extract.slope(LF.MMR.21.clean,
method="max",
r2=0.95,
n.slope=1)
LF.MMR.23.slopes<-extract.slope(LF.MMR.23.clean,
method="max",
r2=0.95,
n.slope=1)
LF.MMR.25.slopes<-extract.slope(LF.MMR.25.clean,
method="max",
r2=0.95,
n.slope=1)
##Calculate Metabolic Rates
LF.MMR.21<-calculate.MR(LF.MMR.21.slopes,density=1000)
LF.MMR.23<-calculate.MR(LF.MMR.23.slopes,density=1000)
LF.MMR.25<-calculate.MR(LF.MMR.25.slopes,density=1000)
##Combine data into one Dataframe
LF.MMR.Acclimated<-rbind.data.frame(LF.MMR.21,LF.MMR.23,LF.MMR.25)
##Add additional columns
Trial<-c("MMR","MMR","MMR","MMR",
"MMR","MMR","MMR","MMR","MMR","MMR","MMR","MMR",
"MMR","MMR","MMR","MMR","MMR","MMR","MMR","MMR",
"MMR","MMR","MMR","MMR")
Temperature<-c(21,21,21,21,21,21,21,21,23,23,23,23,23,23,23,23,25,25,25,25,25,25,25,25)
Event<-c(1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3)
LF.MMR.Acclimated<-cbind(LF.MMR.Acclimated,Trial,Temperature,Event)
write.csv(LF.MMR.Acclimated,"LP Acclimated MMR EXP 2.csv")
LF.MMR<-rbind(LF.SMR.MMR.Acute,LF.MMR.Acute)
LF.MMR<-rbind(LF.SMR.MMR.Acclimated,LF.MMR.Acclimated)
grid.arrange(
ggplot(subset(LF.MMR,Event%in%c(1)),
aes(x = Trial, y = MR.mass, group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 21") + theme(legend.position="none")+ylim(200,500),
ggplot(subset(LF.MMR,Event%in%c(2)),
aes(x = Trial, y = MR.mass, group=Ind, color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 23") + theme(legend.position="none")+ylim(200,500),
ggplot(subset(LF.MMR,Event%in%c(3)),
aes(x = Trial, y = MR.mass,  group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 25") + theme(legend.position="none")+ylim(200,500),
ncol=3
)
grid.arrange(
ggplot(subset(LF.MMR,Event%in%c(1)),
aes(x = Trial, y = MR.mass, group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 21") + theme(legend.position="none")+ylim(200,1000),
ggplot(subset(LF.MMR,Event%in%c(2)),
aes(x = Trial, y = MR.mass, group=Ind, color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 23") + theme(legend.position="none")+ylim(200,1000),
ggplot(subset(LF.MMR,Event%in%c(3)),
aes(x = Trial, y = MR.mass,  group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 25") + theme(legend.position="none")+ylim(200,1000),
ncol=3
)
grid.arrange(
ggplot(subset(LF.MMR,Event%in%c(1)),
aes(x = Trial, y = MR.mass, group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 21") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(2)),
aes(x = Trial, y = MR.mass, group=Ind, color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 23") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(3)),
aes(x = Trial, y = MR.mass,  group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 25") + theme(legend.position="none")+ylim(200,600),
ncol=3
)
grid.arrange(
ggplot(subset(LF.MMR,Event%in%c(1)),
aes(x = Trial, y = MR.mass, group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 21") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(2)),
aes(x = Trial, y = MR.mass, group=Ind, color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 23") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(3)),
aes(x = Trial, y = MR.mass,  group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 25") + theme()+ylim(200,600),
ncol=3
)
library(tidyverse)
library(knitr)
library(nlme)
library(emmeans)
library(kableExtra)
library(GGally)
library(qqplotr)
library(gridExtra)
library(car)
setwd("~/Desktop/")
spring_data <- read.csv("All Data Spring 2021.csv")
setwd("~/Desktop/MR data/2021 Spring Fingerling Data/")
spring_data <- read.csv("All Data Spring 2021.csv")
spring_data_Rep1<-read.csv("Spring Data OnlyRep1.csv")
spring_data_Rep2<-read.csv("Spring Data OnlyRep1.csv")
spring_data$Temp.factor <- factor(spring_data$Temp.factor)
ggpairs(spring_data, c("Trial", "Mass", "Temp.factor", "SMR.units", "MMR.units", "AS.absolute.units", "Stock","Pond", "K"))
ggplot(spring_data, aes(x = Mass, color = Pond)) +
geom_histogram(fill="white",position="dodge",bins=20)
#for easier data handling
acute_data <- filter(spring_data, spring_data$Trial == "Acute")
acclim_data <- filter(spring_data, spring_data$Trial == "Acclimated")
grid.arrange(
ggplot(
aggregate(cbind(SMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acute_data, acute_data$Stock== "LP"), mean),
aes(x = Mass, y = SMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("LP: Acute SMR") +
theme_classic() + theme(legend.position='none'),
ggplot(
aggregate(cbind(SMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acute_data, acute_data$Stock == "UP"), mean),
aes(x = Mass, y = SMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("UP: Acute SMR") +
theme_classic() + theme(legend.position='none'),
ggplot(aggregate(cbind(MMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acute_data, acute_data$Stock == "LP"), mean),
aes(x = Mass, y = MMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("LP: Acute MMR") +
theme_classic() + theme(legend.position='none'),
ggplot(aggregate(cbind(MMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acute_data, acute_data$Stock == "UP"), mean),
aes(x = Mass, y = MMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("UP: Acute MMR") +
theme_classic() + theme(legend.position='none'),
ggplot(
aggregate(cbind(SMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acclim_data, acclim_data$Stock== "LP"), mean),
aes(x = Mass, y = SMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("LP: Acute SMR") +
theme_classic() + theme(legend.position='none'),
ggplot(
aggregate(cbind(SMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acclim_data, acclim_data$Stock == "UP"), mean),
aes(x = Mass, y = SMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("UP: Acute SMR") +
theme_classic() + theme(legend.position='none'),
ggplot(aggregate(cbind(MMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acclim_data, acclim_data$Stock == "LP"), mean),
aes(x = Mass, y = MMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("LP: Acute MMR") +
theme_classic() + theme(legend.position='none'),
ggplot(aggregate(cbind(MMR.units, Mass) ~ Temp.factor + FishIDs,
data=filter(acclim_data, acclim_data$Stock == "UP"), mean),
aes(x = Mass, y = MMR.units, color = Temp.factor)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) + ggtitle("UP: Acute MMR") +
theme_classic() + theme(legend.position='none'),
ncol=4)
all_21 <- filter(acute_data, acute_data$Temp.factor == "21")
acclim_plus_21 <- rbind(acute_data[1:4,], acute_data[33:35,], acclim_data)
grid.arrange(
ggplot(spring_data, aes(x = log(Mass), y = log(SMR.units*Mass*0.001))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + ggtitle("SMR"),
ggplot(spring_data, aes(x = log(Mass), y = log(MMR.units*Mass*0.001))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + ggtitle("MMR"),
ggplot(spring_data, aes(x = log(Mass), y = log(SMR.units*Mass*0.001), color = Trial)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + theme(legend.position="none"),
ggplot(spring_data, aes(x = log(Mass), y = log(MMR.units*Mass*0.001), color = Trial)) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + theme(legend.position="none"),
ggplot(all_21, aes(x = log(Mass), y = log(SMR.units*Mass*0.001))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + theme(legend.position="none"),
ggplot(all_21, aes(x = log(Mass), y = log(MMR.units*Mass*0.001))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + theme(legend.position="none"),
ncol = 2
)
SMR_sf_all <- lm(log(SMR.units*Mass*0.001) ~ log(Mass), data = spring_data)
summary(SMR_sf_all)
spring_data$SMR.nm <- spring_data$SMR*spring_data$Mass*0.001
spring_data$SMR.nm.units <- spring_data$SMR.units*spring_data$Mass*0.001
spring_data$MMR.nm <- spring_data$MMR*spring_data$Mass*0.001
spring_data$MMR.nm.units <- spring_data$MMR.units*spring_data$Mass*0.001
spring_data$MMR.Best.nm <- spring_data$MMR.Best*spring_data$Mass*0.001
spring_data$MMR.Best.nm.units <- spring_data$MMR.Best.units*spring_data$Mass*0.001
#for easier data handling
acclim_data <- filter(spring_data, spring_data$Trial == "Acclimated")
acute_data <- filter(spring_data, spring_data$Trial == "Acute")
MMR_sf_all <- lm(log(MMR.Best.units*Mass*0.001) ~ log(Mass), data = spring_data)
summary(MMR_sf_all)
grid.arrange(
ggplot(spring_data, aes(x = log(Mass), y = log(SMR.nm.units))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + ggtitle("SMR") + xlim(0,2.8) + ylim(-5,-2.5),
ggplot(spring_data, aes(x = log(Mass), y = log(MMR.nm.units))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + ggtitle("MMR") + xlim(0,2.8) + ylim(-4,-1.5),
ggplot(spring_data, aes(x = log(Mass), y = log(SMR.nm.units*(8.5/Mass)**(0.86452)))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + ggtitle("SMR, op3") + xlim(0,2.8) + ylim(-5,-2.5),
ggplot(spring_data, aes(x = log(Mass), y = log(MMR.nm.units*(8.5/Mass)**(0.87360)))) +
geom_point(alpha = 0.4) + geom_smooth(method = "lm", se = FALSE) +
theme_classic() + ggtitle("MMR, op3") + xlim(0,2.8) + ylim(-4,-1.5),
ncol = 2
)
spring_data$SMR.ms <- spring_data$SMR*(spring_data$Mass/8.5)**(1-0.86452)
spring_data$SMR.ms.units <- spring_data$SMR.units*(spring_data$Mass/8.5)**(1-0.86452)
spring_data$MMR.ms <- spring_data$MMR*(spring_data$Mass/8.5)**(1-0.87360)
spring_data$MMR.ms.units <- spring_data$MMR.units*(spring_data$Mass/8.5)**(1-0.87360)
spring_data$MMR.Best.ms <- spring_data$MMR.Best*(spring_data$Mass/8.5)**(1-0.87360)
spring_data$MMR.Best.ms.units<-spring_data$MMR.Best.units*(spring_data$Mass/8.5)**(1-0.87360)
spring_data$AS.ms <- spring_data$MMR.ms - spring_data$SMR.ms
spring_data$AS.ms.units <- spring_data$MMR.ms.units - spring_data$SMR.ms.units
spring_data$AS.Best.ms <- spring_data$MMR.Best.ms - spring_data$SMR.ms
spring_data$AS.Best.ms.units <- spring_data$MMR.Best.ms.units - spring_data$SMR.ms.units
#for easier data handling
acclim_data <- filter(spring_data, spring_data$Trial == "Acclimated")
acute_data <- filter(spring_data, spring_data$Trial == "Acute")
write.csv(spring_data,"All Spring 2021_cleaned.csv",
row.names = FALSE)
spring_data<-read.csv("All Spring 2021_cleaned.csv")
spring_data$Temp.factor <- factor(spring_data$Temp.factor)
acclim_data <- filter(spring_data, spring_data$Trial == "Acclimated")
acute_data <- filter(spring_data, spring_data$Trial == "Acute")
ggpairs(spring_data, c("Trial", "SMR.Temp.true", "MMR.Temp.true","Temp.factor", "SMR.ms", "MMR.ms", "AS.ms", "Stock"))
grid.arrange(
ggplot(acclim_data, aes(x = as.factor(Temp.factor), y = SMR.ms.units, color=Pond))
+ geom_boxplot() + ggtitle("Acclimated, SMR") + theme(legend.position="none") + ylim(0,6),
ggplot(acclim_data, aes(x = as.factor(Temp.factor), y = MMR.ms.units, color=Pond))
+ geom_boxplot() + ggtitle("Acclimated, MMR") + theme(legend.position="none") + ylim(0,12),
ggplot(acclim_data, aes(x = as.factor(Temp.factor), y = AS.ms.units, color=Pond))
+ geom_boxplot() + ggtitle("Acclimated, AS") + theme() + ylim(0,12),
ggplot(acclim_data, aes(x = as.factor(Temp.factor), y = SMR.ms.units, color=Pond))
+ geom_boxplot() + ggtitle("Acclimated, SMR") + theme(legend.position="none") + ylim(0,6),
ggplot(acclim_data, aes(x = as.factor(Temp.factor), y = MMR.Best.ms.units, color=Pond))
+ geom_boxplot() + ggtitle("Acclimated, Best MMR") + theme(legend.position="none") + ylim(0,12),
ggplot(acclim_data, aes(x = as.factor(Temp.factor), y = AS.Best.ms.units, color=Pond))
+ geom_boxplot() + ggtitle("Acclimated, AS Best") + theme() + ylim(0,12),
ncol=3
)
spring_data$Pond.Trial<-paste(spring_data$Trial,"-",spring_data$Pond)
acclim_data <- filter(spring_data, spring_data$Trial == "Acclimated")
acute_data <- filter(spring_data, spring_data$Trial == "Acute")
grid.arrange(
ggplot(spring_data, aes(x = as.factor(Temp.factor), y = SMR.ms.units, color=Pond.Trial))
+ geom_boxplot() + ggtitle("All, SMR") + theme(legend.position="none") + ylim(0,10),
ggplot(spring_data, aes(x = as.factor(Temp.factor), y = MMR.ms.units, color=Pond.Trial))
+ geom_boxplot() + ggtitle("All, MMR") + theme(legend.position="none") + ylim(3,16),
ggplot(spring_data, aes(x = as.factor(Temp.factor), y = AS.ms.units, color=Pond.Trial))
+ geom_boxplot() + ggtitle("All, AS") + theme() + ylim(0,16),
ggplot(spring_data, aes(x = as.factor(Temp.factor), y = SMR.ms.units, color=Pond.Trial))
+ geom_boxplot() + ggtitle("All, SMR") + theme(legend.position="none") + ylim(0,10),
ggplot(spring_data, aes(x = as.factor(Temp.factor), y = MMR.Best.ms.units, color=Pond.Trial))
+ geom_boxplot() + ggtitle("Acute, Best MMR") + theme(legend.position="none") + ylim(3,16),
ggplot(spring_data, aes(x = as.factor(Temp.factor), y = AS.Best.ms.units, color=Pond.Trial))
+ geom_boxplot() + ggtitle("Acute, AS Best") + theme() + ylim(0,16),
ncol=3
)
grid.arrange(
ggplot(subset(LF.MMR,Event%in%c(1)),
aes(x = Trial, y = MR.mass, group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 21") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(2)),
aes(x = Trial, y = MR.mass, group=Ind, color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 23") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(3)),
aes(x = Trial, y = MR.mass,  group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 25") + theme()+ylim(200,600),
ncol=3
)
grid.arrange(
ggplot(subset(LF.MMR,Event%in%c(1)),
aes(x = Trial, y = MR.mass, group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 21") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(2)),
aes(x = Trial, y = MR.mass, group=Ind, color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 23") + theme(legend.position="none")+ylim(200,600),
ggplot(subset(LF.MMR,Event%in%c(3)),
aes(x = Trial, y = MR.mass,  group=Ind,color=Ind)) +
geom_point()+geom_line() + ggtitle("MMR, UP.1 25") + theme()+ylim(200,600),
ncol=3
)
